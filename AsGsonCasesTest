package junit.src.outils.gson;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInfo;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.JsonPrimitive;

import outils.base.OutilsBase;
import outils.gson.AsOutilsGson;
import outils.gson.OutilsGson;

/**
 * Cas de tests supp√©mentaires pour obtenir 100% de couverture
 */
@DisplayName("outils.gson.AsOutilsGson")
public class AsOutilsGsonCasesTest {

	@Test
	@DisplayName("junit.src.outils.gson.testAsOutilsGsonCasesTest()")
	final void testAsOutilsGsonCasesTest(TestInfo testInfo) throws Exception {
		JsonElement element1 = OutilsGson.loadJsonElementsListFromFile(JunitHelper.getFullname(JunitHelper.getCurrentDirectory(), "tests", "files", "gson", "OutilsGson1.json"), FilesCharsetsTypes.UTF_8);
		JsonElement element2 = OutilsGson.loadJsonElementsListFromFile(JunitHelper.getFullname(JunitHelper.getCurrentDirectory(), "tests", "files", "gson", "OutilsGson2.json"), FilesCharsetsTypes.UTF_8);
		JsonElement element3 = OutilsGson.loadJsonElementsListFromFile(JunitHelper.getFullname(JunitHelper.getCurrentDirectory(), "tests", "files", "gson", "OutilsGson3.json"), FilesCharsetsTypes.UTF_8);
		JsonElement element4 = OutilsGson.loadJsonElementsListFromFile(JunitHelper.getFullname(JunitHelper.getCurrentDirectory(), "tests", "files", "gson", "OutilsGson4.json"), FilesCharsetsTypes.UTF_8);
		JsonElement element5 = OutilsGson.loadJsonElementsListFromFile(JunitHelper.getFullname(JunitHelper.getCurrentDirectory(), "tests", "files", "gson", "OutilsGson5.json"), FilesCharsetsTypes.UTF_8);
		JsonElement element6 = OutilsGson.loadJsonElementsListFromFile(JunitHelper.getFullname(JunitHelper.getCurrentDirectory(), "tests", "files", "gson", "OutilsGson6.json"), FilesCharsetsTypes.UTF_8);
		JsonElement element7 = OutilsGson.loadJsonElementsListFromFile(JunitHelper.getFullname(JunitHelper.getCurrentDirectory(), "tests", "files", "gson", "OutilsGson7.json"), FilesCharsetsTypes.UTF_8);
		JsonElement element8 = OutilsGson.loadJsonElementsListFromFile(JunitHelper.getFullname(JunitHelper.getCurrentDirectory(), "tests", "files", "gson", "OutilsGson8.json"), FilesCharsetsTypes.UTF_8);
		
		JsonObject object3 = AsOutilsGson.getAsJsonObject(element3);
		JsonObject object4 = AsOutilsGson.getAsJsonObject(element4);
		JsonObject object5 = AsOutilsGson.getAsJsonObject(element5);
		JsonObject object6 = AsOutilsGson.getAsJsonObject(element6);
		
		OutilsGson.mergeJsonObjects(object3, object4);
		OutilsGson.mergeJsonObjects(object5, object6);
		
		JsonArray array1 = AsOutilsGson.getAsJsonArray(element1);
		JsonArray array2 = AsOutilsGson.getAsJsonArray(element2);
		JsonArray array7 = AsOutilsGson.getAsJsonArray(element7);
		JsonArray array8 = AsOutilsGson.getAsJsonArray(element8);
		
		OutilsGson.mergeJsonArrays(array1, array2);
		OutilsGson.mergeJsonArrays(array7, array8);
		
		OutilsGson.mergeJsonArray(array1);
		OutilsGson.mergeJsonArray(array2);
		OutilsGson.mergeJsonArray(array7);
		OutilsGson.mergeJsonArray(array8);

}
