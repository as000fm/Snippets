	/**
	 * Génération des cas de tests automatisés pour un projet java
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 */
	@SkipTesting
	public static void javaAutomatedTestsUnits(CodeGenerationsTypes codeGenerationType) {
		generateAutomatedTestsUnits(null, null, AutomatedTestsUnitsBase.JAVA_LIST_DIR, null, AutomatedTestsUnitsBase.JAVA_OUTPUT_DIR, null, null, codeGenerationType, false, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet java
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 * @param debug Exécute en mode débogage en effectuant un seul test à la fois en langage Groovy. Utile pour suivre les problèmes, mais ralentit la génération de cas de tests Junit
	 */
	@SkipTesting
	public static void javaAutomatedTestsUnits(CodeGenerationsTypes codeGenerationType, boolean debug) {
		generateAutomatedTestsUnits(null, null, AutomatedTestsUnitsBase.JAVA_LIST_DIR, null, AutomatedTestsUnitsBase.JAVA_OUTPUT_DIR, null, null, codeGenerationType, debug, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet java
	 * @param packageName Package de base Java du répertoire de sortie du paramètre output pour les cas de test Junit générés
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 */
	@SkipTesting
	public static void javaAutomatedTestsUnits(String packageName, CodeGenerationsTypes codeGenerationType) {
		generateAutomatedTestsUnits(null, null, AutomatedTestsUnitsBase.JAVA_LIST_DIR, null, AutomatedTestsUnitsBase.JAVA_OUTPUT_DIR, packageName, null, codeGenerationType, false, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet java
	 * @param packageName Package de base Java du répertoire de sortie du paramètre output pour les cas de test Junit générés
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 * @param debug Exécute en mode débogage en effectuant un seul test à la fois en langage Groovy. Utile pour suivre les problèmes, mais ralentit la génération de cas de tests Junit
	 */
	@SkipTesting
	public static void javaAutomatedTestsUnits(String packageName, CodeGenerationsTypes codeGenerationType, boolean debug) {
		generateAutomatedTestsUnits(null, null, AutomatedTestsUnitsBase.JAVA_LIST_DIR, null, AutomatedTestsUnitsBase.JAVA_OUTPUT_DIR, packageName, null, codeGenerationType, debug, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet maven
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 */
	@SkipTesting
	public static void mavenAutomatedTestsUnits(CodeGenerationsTypes codeGenerationType) {
		generateAutomatedTestsUnits(null, null, AutomatedTestsUnitsBase.MAVEN_LIST_DIR, AutomatedTestsUnitsBase.MAVEN_RESOURCES_DIR, AutomatedTestsUnitsBase.MAVEN_OUTPUT_DIR, null, null, codeGenerationType, false, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet maven
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 * @param debug Exécute en mode débogage en effectuant un seul test à la fois en langage Groovy. Utile pour suivre les problèmes, mais ralentit la génération de cas de tests Junit
	 */
	@SkipTesting
	public static void mavenAutomatedTestsUnits(CodeGenerationsTypes codeGenerationType, boolean debug) {
		generateAutomatedTestsUnits(null, null, AutomatedTestsUnitsBase.MAVEN_LIST_DIR, AutomatedTestsUnitsBase.MAVEN_RESOURCES_DIR, AutomatedTestsUnitsBase.MAVEN_OUTPUT_DIR, null, null, codeGenerationType, debug, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet maven
	 * @param packageName Package de base Java du répertoire de sortie du paramètre output pour les cas de test Junit générés
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 */
	@SkipTesting
	public static void mavenAutomatedTestsUnits(String packageName, CodeGenerationsTypes codeGenerationType) {
		generateAutomatedTestsUnits(null, null, AutomatedTestsUnitsBase.MAVEN_LIST_DIR, AutomatedTestsUnitsBase.MAVEN_RESOURCES_DIR, AutomatedTestsUnitsBase.MAVEN_OUTPUT_DIR, packageName, null, codeGenerationType, false, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet maven
	 * @param packageName Package de base Java du répertoire de sortie du paramètre output pour les cas de test Junit générés
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 * @param debug Exécute en mode débogage en effectuant un seul test à la fois en langage Groovy. Utile pour suivre les problèmes, mais ralentit la génération de cas de tests Junit
	 */
	@SkipTesting
	public static void mavenAutomatedTestsUnits(String packageName, CodeGenerationsTypes codeGenerationType, boolean debug) {
		generateAutomatedTestsUnits(null, null, AutomatedTestsUnitsBase.MAVEN_LIST_DIR, AutomatedTestsUnitsBase.MAVEN_RESOURCES_DIR, AutomatedTestsUnitsBase.MAVEN_OUTPUT_DIR, packageName, null, codeGenerationType, debug, false);
	}

