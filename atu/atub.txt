	/**
	 * Génération des cas de tests automatisés pour un projet java
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 */
	@SkipTesting
	public static void javaTestsUnitairesAutomatises(CodeGenerationsTypes codeGenerationType) {
		generateTestsUnitairesAutomatises(null, null, AutomatedTestsUnitsBase.JAVA_LIST_DIR, null, AutomatedTestsUnitsBase.JAVA_OUTPUT_DIR, null, null, codeGenerationType, false, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet java
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 * @param debug Exécute en mode débogage en effectuant un seul test à la fois en langage Groovy. Utile pour suivre les problèmes, mais ralentit la génération de cas de tests Junit
	 */
	@SkipTesting
	public static void javaTestsUnitairesAutomatises(CodeGenerationsTypes codeGenerationType, boolean debug) {
		generateTestsUnitairesAutomatises(null, null, AutomatedTestsUnitsBase.JAVA_LIST_DIR, null, AutomatedTestsUnitsBase.JAVA_OUTPUT_DIR, null, null, codeGenerationType, debug, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet java
	 * @param packageName Package de base Java du répertoire de sortie du paramètre output pour les cas de test Junit générés
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 */
	@SkipTesting
	public static void javaTestsUnitairesAutomatises(String packageName, CodeGenerationsTypes codeGenerationType) {
		generateTestsUnitairesAutomatises(null, null, AutomatedTestsUnitsBase.JAVA_LIST_DIR, null, AutomatedTestsUnitsBase.JAVA_OUTPUT_DIR, packageName, null, codeGenerationType, false, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet java
	 * @param packageName Package de base Java du répertoire de sortie du paramètre output pour les cas de test Junit générés
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 * @param debug Exécute en mode débogage en effectuant un seul test à la fois en langage Groovy. Utile pour suivre les problèmes, mais ralentit la génération de cas de tests Junit
	 */
	@SkipTesting
	public static void javaTestsUnitairesAutomatises(String packageName, CodeGenerationsTypes codeGenerationType, boolean debug) {
		generateTestsUnitairesAutomatises(null, null, AutomatedTestsUnitsBase.JAVA_LIST_DIR, null, AutomatedTestsUnitsBase.JAVA_OUTPUT_DIR, packageName, null, codeGenerationType, debug, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet maven
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 */
	@SkipTesting
	public static void mavenTestsUnitairesAutomatises(CodeGenerationsTypes codeGenerationType) {
		generateTestsUnitairesAutomatises(null, null, AutomatedTestsUnitsBase.MAVEN_LIST_DIR, AutomatedTestsUnitsBase.MAVEN_RESOURCES_DIR, AutomatedTestsUnitsBase.MAVEN_OUTPUT_DIR, null, null, codeGenerationType, false, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet maven
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 * @param debug Exécute en mode débogage en effectuant un seul test à la fois en langage Groovy. Utile pour suivre les problèmes, mais ralentit la génération de cas de tests Junit
	 */
	@SkipTesting
	public static void mavenTestsUnitairesAutomatises(CodeGenerationsTypes codeGenerationType, boolean debug) {
		generateTestsUnitairesAutomatises(null, null, AutomatedTestsUnitsBase.MAVEN_LIST_DIR, AutomatedTestsUnitsBase.MAVEN_RESOURCES_DIR, AutomatedTestsUnitsBase.MAVEN_OUTPUT_DIR, null, null, codeGenerationType, debug, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet maven
	 * @param packageName Package de base Java du répertoire de sortie du paramètre output pour les cas de test Junit générés
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 */
	@SkipTesting
	public static void mavenTestsUnitairesAutomatises(String packageName, CodeGenerationsTypes codeGenerationType) {
		generateTestsUnitairesAutomatises(null, null, AutomatedTestsUnitsBase.MAVEN_LIST_DIR, AutomatedTestsUnitsBase.MAVEN_RESOURCES_DIR, AutomatedTestsUnitsBase.MAVEN_OUTPUT_DIR, packageName, null, codeGenerationType, false, false);
	}

	/**
	 * Génération des cas de tests automatisés pour un projet maven
	 * @param packageName Package de base Java du répertoire de sortie du paramètre output pour les cas de test Junit générés
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 * @param debug Exécute en mode débogage en effectuant un seul test à la fois en langage Groovy. Utile pour suivre les problèmes, mais ralentit la génération de cas de tests Junit
	 */
	@SkipTesting
	public static void mavenTestsUnitairesAutomatises(String packageName, CodeGenerationsTypes codeGenerationType, boolean debug) {
		generateTestsUnitairesAutomatises(null, null, AutomatedTestsUnitsBase.MAVEN_LIST_DIR, AutomatedTestsUnitsBase.MAVEN_RESOURCES_DIR, AutomatedTestsUnitsBase.MAVEN_OUTPUT_DIR, packageName, null, codeGenerationType, debug, false);
	}

	/**
	 * Génération des cas de tests automatisés
	 * @param project Nom du projet dans l'IDE
	 * @param source Répertoire source des classes Java pour générer les tests automatisés depuis
	 * @param list Liste des sous-répertoires du paramètre source des classes Java pour générer les tests automatisés depuis
	 * @param resources Répertoire des fichiers ressources pour les cas de tests Junit générés
	 * @param output Répertoire de sortie pour les cas de tests Junit générés
	 * @param packageName Package de base Java du répertoire de sortie du paramètre output pour les cas de test Junit générés
	 * @param documentation Répertoire de sortie de la documentation pour les cas de tests Junit générés
	 * @param codeGenerationType Type de génération du code (voir automated.tests.types.CodeGenerationsTypes)
	 * @param debug Exécute en mode débogage en effectuant un seul test à la fois en langage Groovy. Utile pour suivre les problèmes, mais ralentit la génération de cas de tests Junit
	 * @param statistics Extrait les statistiques du nombre de classes, constructeurs et de méthodes sans produire aucun code des cas de test Junit
	 */
	@SkipTesting
	public static void generateTestsUnitairesAutomatises(String project, String source, String[] list, String resources, String output, String packageName, String documentation, CodeGenerationsTypes codeGenerationType, boolean debug, boolean statistics) {
		main(AutomatedTestsUnitsBase.getAutomatedTestsUnitsArguments(true, project, source, list, resources, output, packageName, documentation, codeGenerationType, debug, statistics));
	}

